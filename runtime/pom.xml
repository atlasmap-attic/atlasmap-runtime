<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

    Copyright (C) 2017 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.atlasmap</groupId>
        <artifactId>atlas</artifactId>
        <version>1.30.0.fuse-000003</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>runtime</artifactId>
    <name>Atlas :: Runtime</name>
    <packaging>jar</packaging>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <java-image.version>1.2</java-image.version>
        <camel.version>2.20.0.fuse-000101</camel.version>
    </properties>

    <build>
        <finalName>runtime</finalName>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-server -Xms256m -Xmx512m</jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>build-info</id>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <configuration>
                    <mode>kubernetes</mode>
                    <generator>
                        <config>
                            <spring-boot>
                                <name>${docker.image}</name>
                                <from>${from.image}</from>
                            </spring-boot>
                        </config>
                    </generator>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-boot-dependencies</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-parent</artifactId>
                <version>${camel.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>

        <!-- === Internal dependencies (don't touch without discussion) ========================== -->
        <dependency>
            <groupId>io.atlasmap</groupId>
            <artifactId>atlas-java-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.atlasmap</groupId>
            <artifactId>atlas-json-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.atlasmap</groupId>
            <artifactId>atlas-xml-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.atlasmap</groupId>
            <artifactId>atlas-service</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- ===================================================================================== -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.paypal.springboot</groupId>
            <artifactId>resteasy-spring-boot-starter</artifactId>
            <version>${resteasy-spring-boot-starter.version}</version>
        </dependency>

        <!-- for now adding all connectors -->
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>twitter-mention-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>twitter-search-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-upsert-contact-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-create-sobject-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-delete-sobject-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-delete-sobject-with-id-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-get-sobject-with-id-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-update-sobject-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-upsert-sobject-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-on-create-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-on-update-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>salesforce-on-delete-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>http-get-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>http-post-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>timer-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>trade-insight-buy-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>trade-insight-sell-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>trade-insight-top-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>day-trade-place-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>io.syndesis</groupId>
            <artifactId>sql-stored-connector</artifactId>
            <version>${syndesis.connector.version}</version>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>ipaas-releases</id>
            <name>ipaas-releases</name>
            <url>https://dl.bintray.com/redhat-ipaas/maven/</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jboss.ea</id>
            <name>JBoss EA</name>
            <url>https://repository.jboss.org/nexus/content/groups/ea</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>fabric8</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>fmp</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>debug</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000
                                -server -Xms256m -Xmx512m</jvmArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>itests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <useTestClasspath>true</useTestClasspath>
                            <folders>
                                <folder>${project.build.testOutputDirectory}</folder>
                            </folders>
                            <arguments>
                                <argument>--logging.level.io.atlasmap=DEBUG</argument>
                                <argument>--logging.file=target/atlasmap-spring-boot.log</argument>
                            </arguments>
                            <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000
                                -server -Xms256m -Xmx512m</jvmArguments>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>keytool-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <id>clean</id>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>generate-resources</phase>
                                <id>generateKeyPair</id>
                                <goals>
                                    <goal>generateKeyPair</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <keystore>${project.build.testOutputDirectory}/ssl.keystore</keystore>
                            <dname>cn=localhost</dname>
                            <keypass>atlasmap</keypass>
                            <storepass>atlasmap</storepass>
                            <alias>atlasmap</alias>
                            <keyalg>RSA</keyalg>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>io.atlasmap</groupId>
                    <artifactId>atlas-java-test-model</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
